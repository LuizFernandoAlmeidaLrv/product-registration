/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.martinello.cadastro.view;

import br.com.martinello.matriz.bd.control.ParametrosControl;
import br.com.martinello.matriz.bd.model.domain.Parametro;
import br.com.martinello.matriz.componentesbasicos.view.TelaPadrao;
import br.com.martinello.matriz.util.excessoes.ErroSistemaException;
import com.towel.swing.table.ObjectTableModel;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author luiz.almeida
 */
public class TelaParametros extends TelaPadrao {

    private ParametrosControl parametroControl = new ParametrosControl();
    private List<Parametro> Lparametro = new ArrayList<>();
    private Parametro parametro;
    /**
     * Creates new form TelaParametros
     */
    private String salvarAlterar = "Salvar";
    private final ObjectTableModel<Parametro> otmParametros = new ObjectTableModel<>(Parametro.class, "parametro,valor,ultimaAtualizacao,usuarioAlteracao,descricao");

    public TelaParametros() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ppTabelaParametros = new br.com.martinello.matriz.componentesbasicos.paineis.PainelPadrao();
        jspTabelaParametros = new javax.swing.JScrollPane();
        tpParametros = new br.com.martinello.matriz.componentesbasicos.TabelaPadrao();
        jpsParametros = new br.com.martinello.matriz.componentesbasicos.paineis.JPStatus();
        ppFiltroParametros = new br.com.martinello.matriz.componentesbasicos.paineis.PainelPadrao();
        bCancelar = new br.com.martinello.matriz.componentesbasicos.Botao();
        bAlterar = new br.com.martinello.matriz.componentesbasicos.Botao();
        bSalvar = new br.com.martinello.matriz.componentesbasicos.Botao();
        bPesquisar = new br.com.martinello.matriz.componentesbasicos.Botao();
        rNomeParametro = new br.com.martinello.matriz.componentesbasicos.Rotulo();
        rValorParametro = new br.com.martinello.matriz.componentesbasicos.Rotulo();
        rDescricaoParametro = new br.com.martinello.matriz.componentesbasicos.Rotulo();
        csValorParametro = new br.com.martinello.matriz.componentesbasicos.CampoString();
        csDescricaoParametro = new br.com.martinello.matriz.componentesbasicos.CampoString();
        cscParametro = new br.com.martinello.matriz.componentesbasicos.consulta.CampoStringConsulta();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Parametros");
        setMaximumSize(new java.awt.Dimension(1600, 900));
        setPreferredSize(new java.awt.Dimension(1600, 900));
        getContentPane().setLayout(new java.awt.BorderLayout());

        ppTabelaParametros.setLayout(new java.awt.BorderLayout());

        tpParametros.setModel(otmParametros);
        jspTabelaParametros.setViewportView(tpParametros);

        ppTabelaParametros.add(jspTabelaParametros, java.awt.BorderLayout.CENTER);
        ppTabelaParametros.add(jpsParametros, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(ppTabelaParametros, java.awt.BorderLayout.CENTER);

        bCancelar.setText("Cancelar");
        bCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarActionPerformed(evt);
            }
        });

        bAlterar.setText("Alterar");
        bAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAlterarActionPerformed(evt);
            }
        });

        bSalvar.setText("Salvar");
        bSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalvarActionPerformed(evt);
            }
        });

        bPesquisar.setText("Pesquisar");
        bPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPesquisarActionPerformed(evt);
            }
        });

        rNomeParametro.setText("Parametro:");

        rValorParametro.setText("Valor Parametro:");

        rDescricaoParametro.setText("Descrição:");

        javax.swing.GroupLayout ppFiltroParametrosLayout = new javax.swing.GroupLayout(ppFiltroParametros);
        ppFiltroParametros.setLayout(ppFiltroParametrosLayout);
        ppFiltroParametrosLayout.setHorizontalGroup(
            ppFiltroParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppFiltroParametrosLayout.createSequentialGroup()
                .addGroup(ppFiltroParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ppFiltroParametrosLayout.createSequentialGroup()
                        .addComponent(rDescricaoParametro, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(csDescricaoParametro, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ppFiltroParametrosLayout.createSequentialGroup()
                        .addGroup(ppFiltroParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ppFiltroParametrosLayout.createSequentialGroup()
                                .addComponent(rValorParametro, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(csValorParametro, javax.swing.GroupLayout.DEFAULT_SIZE, 884, Short.MAX_VALUE))
                            .addGroup(ppFiltroParametrosLayout.createSequentialGroup()
                                .addComponent(rNomeParametro, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cscParametro, javax.swing.GroupLayout.DEFAULT_SIZE, 884, Short.MAX_VALUE)))
                        .addGap(466, 466, 466)
                        .addGroup(ppFiltroParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bCancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bAlterar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        ppFiltroParametrosLayout.setVerticalGroup(
            ppFiltroParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppFiltroParametrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ppFiltroParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ppFiltroParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rNomeParametro, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cscParametro, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppFiltroParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ppFiltroParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rValorParametro, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(csValorParametro, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppFiltroParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ppFiltroParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ppFiltroParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rDescricaoParametro, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(csDescricaoParametro, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(ppFiltroParametros, java.awt.BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPesquisarActionPerformed
        pesquisar("Consulta");
    }//GEN-LAST:event_bPesquisarActionPerformed

    private void bAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAlterarActionPerformed
        int linha = tpParametros.getSelectedRow();
        Parametro parametrosModel = new Parametro();

        if (linha < 0) {
            jpsParametros.setStatus("Nenhuma linha selecionada, por favor selecione uma linha", jpsParametros.ALERTA);
        } else {
            cscParametro.setaValorFiltro((String) tpParametros.getValueAt(linha, 0));
            csValorParametro.setText((String) tpParametros.getValueAt(linha, 1));
            csDescricaoParametro.setText((String) tpParametros.getValueAt(linha, 4));
            cscParametro.setEnabled(false);
            cscParametro.getCsFiltroString().setEditable(false);
            salvarAlterar = "Alterar";

        }

    }//GEN-LAST:event_bAlterarActionPerformed

    private void bSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalvarActionPerformed
        parametro = new Parametro();
        if (cscParametro.getFiltroOld() != null) {
            parametro.setParametro(cscParametro.getString().toUpperCase());
            parametro.setDescricao(csDescricaoParametro.getString());
            parametro.setValor(csValorParametro.getString());
            parametro.setUsuarioAlteracao(TelaPrincipal.usuario.getIdUsuario());

            if (salvarAlterar.equalsIgnoreCase("ALTERAR")) {
                parametroControl = new ParametrosControl();
                try {
                    parametroControl.updateParametro(parametro);
                    jpsParametros.setStatus("Registro Alterado com sucesso!", jpsParametros.NORMAL);
                } catch (ErroSistemaException ex) {
                    ex.printStackTrace();
                    limpar();
                    jpsParametros.setStatus(ex.getMessage(), jpsParametros.ERRO, ex);
                }
            } else {
                parametroControl = new ParametrosControl();
                try {
                    parametroControl.insertParametro(parametro);
                    jpsParametros.setStatus("Registro Salvo com sucesso!", jpsParametros.NORMAL);
                } catch (ErroSistemaException ex) {
                    ex.printStackTrace();
                    limpar();
                    jpsParametros.setStatus(ex.getMessage(), jpsParametros.ERRO, ex);
                }
            }

            limpar();
        } else {
            jpsParametros.setStatus("O campo parametro deve ser prenchido!", jpsParametros.ERRO);
        }
    }//GEN-LAST:event_bSalvarActionPerformed

    private void bCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarActionPerformed
        limpar();
    }//GEN-LAST:event_bCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private br.com.martinello.matriz.componentesbasicos.Botao bAlterar;
    private br.com.martinello.matriz.componentesbasicos.Botao bCancelar;
    private br.com.martinello.matriz.componentesbasicos.Botao bPesquisar;
    private br.com.martinello.matriz.componentesbasicos.Botao bSalvar;
    private br.com.martinello.matriz.componentesbasicos.CampoString csDescricaoParametro;
    private br.com.martinello.matriz.componentesbasicos.CampoString csValorParametro;
    private br.com.martinello.matriz.componentesbasicos.consulta.CampoStringConsulta cscParametro;
    private br.com.martinello.matriz.componentesbasicos.paineis.JPStatus jpsParametros;
    private javax.swing.JScrollPane jspTabelaParametros;
    private br.com.martinello.matriz.componentesbasicos.paineis.PainelPadrao ppFiltroParametros;
    private br.com.martinello.matriz.componentesbasicos.paineis.PainelPadrao ppTabelaParametros;
    private br.com.martinello.matriz.componentesbasicos.Rotulo rDescricaoParametro;
    private br.com.martinello.matriz.componentesbasicos.Rotulo rNomeParametro;
    private br.com.martinello.matriz.componentesbasicos.Rotulo rValorParametro;
    private br.com.martinello.matriz.componentesbasicos.TabelaPadrao tpParametros;
    // End of variables declaration//GEN-END:variables
private void limpar() {
        cscParametro.getCsFiltroString().setEditable(false);
        cscParametro.setaValorFiltro("");
        csDescricaoParametro.setString("");
        csValorParametro.setString("");
        pesquisar("Limpar");
        salvarAlterar = "Salvar";
    }

    private void pesquisar(String origem) {
        try {
            parametroControl = new ParametrosControl();
            parametro = new Parametro();
            parametro.setDescricao(csDescricaoParametro.getString());
            if (cscParametro.getFiltroOld() != null) {
                parametro.setParametro(cscParametro.getFiltroOld().toString().toUpperCase());
            }else{
                parametro.setParametro("");
            }
            parametro.setValor(csValorParametro.getString());
            Lparametro = parametroControl.buscarParametros(parametro);
            otmParametros.setData(Lparametro);
            otmParametros.fireTableDataChanged();
            if (origem.equalsIgnoreCase("Consulta")) {
                jpsParametros.setStatus("Pesquisa realizada com sucesso.", jpsParametros.NORMAL);
            }

            if (tpParametros.getRowCount() > 0) {
                tpParametros.packAll();
                tpParametros.addRowSelectionInterval(tpParametros.convertRowIndexToView(0), tpParametros.convertRowIndexToView(0));
                tpParametros.grabFocus();
            }
        } catch (ErroSistemaException ex) {
            ex.printStackTrace();
        }
    }
}
