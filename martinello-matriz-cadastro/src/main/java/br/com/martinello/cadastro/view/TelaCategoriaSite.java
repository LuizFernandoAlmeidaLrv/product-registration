/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.martinello.cadastro.view;

import br.com.martinello.matriz.bd.control.CategoriaControl;
import br.com.martinello.matriz.bd.model.domain.Categoria;
import br.com.martinello.matriz.bd.model.domain.Usuario;
import br.com.martinello.matriz.componentesbasicos.paineis.JPStatus;
import br.com.martinello.matriz.componentesbasicos.view.TelaPadrao;
import br.com.martinello.matriz.util.FixedLengthDocument;
import br.com.martinello.matriz.util.excessoes.ErroSistemaException;
import com.towel.swing.table.ObjectTableModel;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author luiz.almeida
 */
public class TelaCategoriaSite extends TelaPadrao {

    /**
     * Creates new form TelaCategoria
     */
    private Categoria filtroCategoria;
    private Categoria categoria;
    private CategoriaControl categoriaControl;
    private List<Categoria> lCategoria;
    private boolean resultado;
    private String salvarAlterar = "Salvar";
    private static Usuario usuario;
    private int idCategoria = 0;
    private final ObjectTableModel<Categoria> otmCatalogo = new ObjectTableModel<>(Categoria.class, "idCategoria,idCategoriaPai,categoriaPai,categoria,situacao,visivel,obsCategoria,dataCadastro");

    public TelaCategoriaSite() {
        initComponents();
        paCategoria.setEnabledAt(1, false);
        usuario = (TelaPrincipal.usuario);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpsCategoria = new br.com.martinello.matriz.componentesbasicos.paineis.JPStatus();
        paCategoria = new br.com.martinello.matriz.componentesbasicos.paineis.PainelAba();
        ppConsultaCat = new br.com.martinello.matriz.componentesbasicos.paineis.PainelPadrao();
        ppTabConsultaCat = new br.com.martinello.matriz.componentesbasicos.paineis.PainelPadrao();
        jspTabConsultaCat = new javax.swing.JScrollPane();
        tpConsultaCat = new br.com.martinello.matriz.componentesbasicos.TabelaPadrao();
        ppFiltroConsultaCat = new br.com.martinello.matriz.componentesbasicos.paineis.PainelPadrao();
        rotulo1 = new br.com.martinello.matriz.componentesbasicos.Rotulo();
        rotulo2 = new br.com.martinello.matriz.componentesbasicos.Rotulo();
        ciIdCategoria = new br.com.martinello.matriz.componentesbasicos.CampoInteiro();
        cscCategoria = new br.com.martinello.matriz.componentesbasicos.consulta.CampoStringConsulta();
        rotulo3 = new br.com.martinello.matriz.componentesbasicos.Rotulo();
        jrbAtivoCatFiltro = new javax.swing.JRadioButton();
        jrbInativoCatFiltro = new javax.swing.JRadioButton();
        btPesquisar = new br.com.martinello.matriz.componentesbasicos.Botao();
        btAlterar = new br.com.martinello.matriz.componentesbasicos.Botao();
        btCadastrar = new br.com.martinello.matriz.componentesbasicos.Botao();
        btExcluir = new br.com.martinello.matriz.componentesbasicos.Botao();
        ppCadastroCat = new br.com.martinello.matriz.componentesbasicos.paineis.PainelPadrao();
        ppFiltroConsultaCat1 = new br.com.martinello.matriz.componentesbasicos.paineis.PainelPadrao();
        rCategoriaFilha = new br.com.martinello.matriz.componentesbasicos.Rotulo();
        rStatus = new br.com.martinello.matriz.componentesbasicos.Rotulo();
        btCancelarCadastro = new br.com.martinello.matriz.componentesbasicos.Botao();
        btSalvarCadastro = new br.com.martinello.matriz.componentesbasicos.Botao();
        rObservacao = new br.com.martinello.matriz.componentesbasicos.Rotulo();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtaObservacao = new javax.swing.JTextArea();
        csCategoriaCad = new br.com.martinello.matriz.componentesbasicos.CampoString();
        clsSituacaoCad = new br.com.martinello.matriz.componentesbasicos.CampoListaSimples();
        rCatPai = new br.com.martinello.matriz.componentesbasicos.Rotulo();
        cccCategoria = new br.com.martinello.cadastro.componentes.consulta.CampoConsultaCategoria();
        rDesCatPai = new br.com.martinello.matriz.componentesbasicos.Rotulo();
        rVisivel = new br.com.martinello.matriz.componentesbasicos.Rotulo();
        clsVisivelProduto = new br.com.martinello.matriz.componentesbasicos.CampoListaSimples();
        rotulo4 = new br.com.martinello.matriz.componentesbasicos.Rotulo();
        ciIdCategoriaCad = new br.com.martinello.matriz.componentesbasicos.CampoInteiro();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cadastro Categoria Site");
        setMaximumSize(new java.awt.Dimension(1600, 900));
        setPreferredSize(new java.awt.Dimension(1600, 900));
        getContentPane().add(jpsCategoria, java.awt.BorderLayout.SOUTH);

        paCategoria.setToolTipText("");

        ppConsultaCat.setLayout(new java.awt.BorderLayout());

        ppTabConsultaCat.setMinimumSize(new java.awt.Dimension(1029, 120));
        ppTabConsultaCat.setPreferredSize(new java.awt.Dimension(1029, 480));
        ppTabConsultaCat.setLayout(new java.awt.BorderLayout());

        tpConsultaCat.setModel(otmCatalogo);
        tpConsultaCat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tpConsultaCatKeyPressed(evt);
            }
        });
        jspTabConsultaCat.setViewportView(tpConsultaCat);

        ppTabConsultaCat.add(jspTabConsultaCat, java.awt.BorderLayout.CENTER);

        ppConsultaCat.add(ppTabConsultaCat, java.awt.BorderLayout.CENTER);

        ppFiltroConsultaCat.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtros da pesquisa"));
        ppFiltroConsultaCat.setMinimumSize(new java.awt.Dimension(1029, 120));
        ppFiltroConsultaCat.setPreferredSize(new java.awt.Dimension(1029, 120));

        rotulo1.setText("Id.:");

        rotulo2.setText("Categoria:");

        ciIdCategoria.setEditable(false);
        ciIdCategoria.setText("0");

        rotulo3.setText("Status:");

        jrbAtivoCatFiltro.setText("Ativo");

        jrbInativoCatFiltro.setText("Inativo");

        btPesquisar.setText("Pesquisar");
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        btAlterar.setText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });

        btCadastrar.setText("Incluir");
        btCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastrarActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ppFiltroConsultaCatLayout = new javax.swing.GroupLayout(ppFiltroConsultaCat);
        ppFiltroConsultaCat.setLayout(ppFiltroConsultaCatLayout);
        ppFiltroConsultaCatLayout.setHorizontalGroup(
            ppFiltroConsultaCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppFiltroConsultaCatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ppFiltroConsultaCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ppFiltroConsultaCatLayout.createSequentialGroup()
                        .addGroup(ppFiltroConsultaCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rotulo3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rotulo2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ppFiltroConsultaCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cscCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ppFiltroConsultaCatLayout.createSequentialGroup()
                                .addComponent(jrbAtivoCatFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jrbInativoCatFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(ppFiltroConsultaCatLayout.createSequentialGroup()
                        .addComponent(rotulo1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ciIdCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 842, Short.MAX_VALUE)
                .addGroup(ppFiltroConsultaCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ppFiltroConsultaCatLayout.createSequentialGroup()
                        .addComponent(btPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        ppFiltroConsultaCatLayout.setVerticalGroup(
            ppFiltroConsultaCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppFiltroConsultaCatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ppFiltroConsultaCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotulo1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ciIdCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppFiltroConsultaCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ppFiltroConsultaCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(rotulo2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cscCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ppFiltroConsultaCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppFiltroConsultaCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ppFiltroConsultaCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rotulo3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jrbAtivoCatFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jrbInativoCatFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ppConsultaCat.add(ppFiltroConsultaCat, java.awt.BorderLayout.NORTH);

        paCategoria.addTab("Consulta", ppConsultaCat);

        ppCadastroCat.setMaximumSize(new java.awt.Dimension(1024, 500));
        ppCadastroCat.setLayout(new java.awt.BorderLayout());

        ppFiltroConsultaCat1.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtros da pesquisa"));
        ppFiltroConsultaCat1.setMinimumSize(new java.awt.Dimension(1029, 170));
        ppFiltroConsultaCat1.setPreferredSize(new java.awt.Dimension(1029, 170));

        btCancelarCadastro.setText("Cancelar");
        btCancelarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarCadastroActionPerformed(evt);
            }
        });

        btSalvarCadastro.setText("Salvar");
        btSalvarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarCadastroActionPerformed(evt);
            }
        });

        rObservacao.setText("Observação:");

        jtaObservacao.setColumns(20);
        jtaObservacao.setDocument(new FixedLengthDocument(150));
        jtaObservacao.setRows(5);
        jScrollPane2.setViewportView(jtaObservacao);

        csCategoriaCad.setComponenteRotulo(rCategoriaFilha);
        csCategoriaCad.setDescricaoRotulo("Categoria");
        csCategoriaCad.setObrigatorio(true);
        csCategoriaCad.setQtdMaxCaracteres(125);

        clsSituacaoCad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ativo", "Inativo", "" }));
        clsSituacaoCad.setComponenteRotulo(rStatus);
        clsSituacaoCad.setDescricaoRotulo("Status");
        clsSituacaoCad.setObrigatorio(true);

        rCatPai.setText("Categoria Pai:");

        cccCategoria.setrDescricaoProduto(rDesCatPai);

        rDesCatPai.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        clsVisivelProduto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sim", "Não", "" }));
        clsVisivelProduto.setComponenteRotulo(rVisivel);
        clsVisivelProduto.setDescricaoRotulo("Visível");
        clsVisivelProduto.setObrigatorio(true);

        rotulo4.setText("Id.:");

        ciIdCategoriaCad.setEditable(false);
        ciIdCategoriaCad.setText("0");

        javax.swing.GroupLayout ppFiltroConsultaCat1Layout = new javax.swing.GroupLayout(ppFiltroConsultaCat1);
        ppFiltroConsultaCat1.setLayout(ppFiltroConsultaCat1Layout);
        ppFiltroConsultaCat1Layout.setHorizontalGroup(
            ppFiltroConsultaCat1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppFiltroConsultaCat1Layout.createSequentialGroup()
                .addGroup(ppFiltroConsultaCat1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ppFiltroConsultaCat1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(ppFiltroConsultaCat1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ppFiltroConsultaCat1Layout.createSequentialGroup()
                                .addGroup(ppFiltroConsultaCat1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(rCategoriaFilha, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                    .addComponent(rObservacao, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                    .addComponent(rStatus))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ppFiltroConsultaCat1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(csCategoriaCad, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(clsSituacaoCad, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(ppFiltroConsultaCat1Layout.createSequentialGroup()
                                .addComponent(rCatPai, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cccCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rDesCatPai, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ppFiltroConsultaCat1Layout.createSequentialGroup()
                                .addComponent(rVisivel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clsVisivelProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(ppFiltroConsultaCat1Layout.createSequentialGroup()
                        .addGap(483, 483, 483)
                        .addComponent(btCancelarCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btSalvarCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ppFiltroConsultaCat1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rotulo4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ciIdCategoriaCad, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(764, Short.MAX_VALUE))
        );
        ppFiltroConsultaCat1Layout.setVerticalGroup(
            ppFiltroConsultaCat1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppFiltroConsultaCat1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ppFiltroConsultaCat1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotulo4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ciIdCategoriaCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ppFiltroConsultaCat1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ppFiltroConsultaCat1Layout.createSequentialGroup()
                        .addGroup(ppFiltroConsultaCat1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rCatPai, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cccCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ppFiltroConsultaCat1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rCategoriaFilha, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(csCategoriaCad, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ppFiltroConsultaCat1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clsSituacaoCad, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ppFiltroConsultaCat1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clsVisivelProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rVisivel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ppFiltroConsultaCat1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rObservacao, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 540, Short.MAX_VALUE)
                        .addGroup(ppFiltroConsultaCat1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btCancelarCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btSalvarCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ppFiltroConsultaCat1Layout.createSequentialGroup()
                        .addComponent(rDesCatPai, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        ppCadastroCat.add(ppFiltroConsultaCat1, java.awt.BorderLayout.CENTER);

        paCategoria.addTab("Cadastro / Alteração", ppCadastroCat);

        getContentPane().add(paCategoria, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        buscarCatalogo("Consultar");
    }//GEN-LAST:event_btPesquisarActionPerformed

    private void btCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastrarActionPerformed
        salvarAlterar = "Salvar";
        paCategoria.setSelectedComponent(ppCadastroCat);
        ppCadastroCat.setVisible(true);
        paCategoria.setEnabledAt(0, false);

    }//GEN-LAST:event_btCadastrarActionPerformed

    private void tpConsultaCatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tpConsultaCatKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tpConsultaCatKeyPressed

    private void btCancelarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarCadastroActionPerformed
        limparCadastrar();
    }//GEN-LAST:event_btCancelarCadastroActionPerformed

    private void btSalvarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarCadastroActionPerformed
        salvarCatalogo();
        if (resultado == true) {
            buscarCatalogo("Salvar");
        }
    }//GEN-LAST:event_btSalvarCadastroActionPerformed

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        salvarAlterar = "Alterar";
        alterarCategoria();
        if (resultado == true) {
            paCategoria.setSelectedComponent(ppCadastroCat);
            ppCadastroCat.setVisible(true);
            csCategoriaCad.requestFocus();
        } else {

        }

    }//GEN-LAST:event_btAlterarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        excluirCategoria();
    }//GEN-LAST:event_btExcluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private br.com.martinello.matriz.componentesbasicos.Botao btAlterar;
    private br.com.martinello.matriz.componentesbasicos.Botao btCadastrar;
    private br.com.martinello.matriz.componentesbasicos.Botao btCancelarCadastro;
    private br.com.martinello.matriz.componentesbasicos.Botao btExcluir;
    private br.com.martinello.matriz.componentesbasicos.Botao btPesquisar;
    private br.com.martinello.matriz.componentesbasicos.Botao btSalvarCadastro;
    private br.com.martinello.cadastro.componentes.consulta.CampoConsultaCategoria cccCategoria;
    private br.com.martinello.matriz.componentesbasicos.CampoInteiro ciIdCategoria;
    private br.com.martinello.matriz.componentesbasicos.CampoInteiro ciIdCategoriaCad;
    private br.com.martinello.matriz.componentesbasicos.CampoListaSimples clsSituacaoCad;
    private br.com.martinello.matriz.componentesbasicos.CampoListaSimples clsVisivelProduto;
    private br.com.martinello.matriz.componentesbasicos.CampoString csCategoriaCad;
    private br.com.martinello.matriz.componentesbasicos.consulta.CampoStringConsulta cscCategoria;
    private javax.swing.JScrollPane jScrollPane2;
    private br.com.martinello.matriz.componentesbasicos.paineis.JPStatus jpsCategoria;
    private javax.swing.JRadioButton jrbAtivoCatFiltro;
    private javax.swing.JRadioButton jrbInativoCatFiltro;
    private javax.swing.JScrollPane jspTabConsultaCat;
    private javax.swing.JTextArea jtaObservacao;
    private br.com.martinello.matriz.componentesbasicos.paineis.PainelAba paCategoria;
    private br.com.martinello.matriz.componentesbasicos.paineis.PainelPadrao ppCadastroCat;
    private br.com.martinello.matriz.componentesbasicos.paineis.PainelPadrao ppConsultaCat;
    private br.com.martinello.matriz.componentesbasicos.paineis.PainelPadrao ppFiltroConsultaCat;
    private br.com.martinello.matriz.componentesbasicos.paineis.PainelPadrao ppFiltroConsultaCat1;
    private br.com.martinello.matriz.componentesbasicos.paineis.PainelPadrao ppTabConsultaCat;
    private br.com.martinello.matriz.componentesbasicos.Rotulo rCatPai;
    private br.com.martinello.matriz.componentesbasicos.Rotulo rCategoriaFilha;
    private br.com.martinello.matriz.componentesbasicos.Rotulo rDesCatPai;
    private br.com.martinello.matriz.componentesbasicos.Rotulo rObservacao;
    private br.com.martinello.matriz.componentesbasicos.Rotulo rStatus;
    private br.com.martinello.matriz.componentesbasicos.Rotulo rVisivel;
    private br.com.martinello.matriz.componentesbasicos.Rotulo rotulo1;
    private br.com.martinello.matriz.componentesbasicos.Rotulo rotulo2;
    private br.com.martinello.matriz.componentesbasicos.Rotulo rotulo3;
    private br.com.martinello.matriz.componentesbasicos.Rotulo rotulo4;
    private br.com.martinello.matriz.componentesbasicos.TabelaPadrao tpConsultaCat;
    // End of variables declaration//GEN-END:variables

    private void buscarCatalogo(String origem) {
        try {
            filtroCategoria = new Categoria();
            lCategoria = new ArrayList<>();
            categoriaControl = new CategoriaControl();
            if (ciIdCategoria.getInteger() > 0) {
                filtroCategoria.setIdCategoria(ciIdCategoria.getInteger());
            }
            if (cscCategoria.getFiltroOld() != null) {
                filtroCategoria.setCategoria(cscCategoria.getFiltroOld().toString().toUpperCase());
            }

            String sitCat = "";
            if (jrbAtivoCatFiltro.isSelected()) {
                sitCat = "'" + "A" + "'";
            }
            if (jrbInativoCatFiltro.isSelected()) {
                if (sitCat.isEmpty()) {
                    sitCat = "'" + "I" + "'";
                } else {
                    sitCat = sitCat + ",'I'";
                }
            }
            System.out.println("sit:" + sitCat);
            filtroCategoria.setSituacao(sitCat);
            lCategoria = categoriaControl.listarCatalogo(filtroCategoria);
            otmCatalogo.setData(lCategoria);
            otmCatalogo.fireTableDataChanged();

            tpConsultaCat.setForeground(Color.BLACK);
            if (origem.equalsIgnoreCase("Consultar")) {
                paCategoria.setSelectedComponent(ppConsultaCat);
                if (lCategoria.size() > 0) {
                    jpsCategoria.setStatus("Pesquisa realizada com sucesso.", JPStatus.NORMAL);
                } else {
                    jpsCategoria.setStatus("Pesquisa realizada com sucesso, nenhum registro encontrado!", JPStatus.NORMAL);
                }
            }

            if (tpConsultaCat.getRowCount() > 0) {
                tpConsultaCat.packAll();
                tpConsultaCat.addRowSelectionInterval(tpConsultaCat.convertRowIndexToView(0), tpConsultaCat.convertRowIndexToView(0));
                tpConsultaCat.grabFocus();
            }
        } catch (ErroSistemaException ex) {
            jpsCategoria.setStatus(ex.getMessage(), JPStatus.ERRO);
        }
    }

    private boolean cadastrarCategoria() {
        try {
            categoria = new Categoria();
            if (cscCategoria.getString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "É necessário preencher o campo descrição da categoria.");
            } else {
                categoria.setCategoria(cscCategoria.getString().toUpperCase());
            }
            int option = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente cadastrar nova categoria?", "Confirma", JOptionPane.YES_NO_OPTION);
            if (option == 1) {
                return resultado = false;
            }
            categoriaControl = new CategoriaControl();
            resultado = categoriaControl.insertCategoria(categoria);
        } catch (ErroSistemaException ex) {
            jpsCategoria.setStatus(ex.getMessage(), JPStatus.ERRO);
        }
        if (resultado = true) {
            ciIdCategoria.setValorPadrao(0);
            cscCategoria.setaValorFiltro(null);
        }
        return resultado;
    }

    private void limparCadastrar() {
        //   cccCategoria = null;
        cccCategoria.getCcpCategoria().setText("");
        cccCategoria.getCcpCategoria().setString("");
        idCategoria = 0;
        csCategoriaCad.setText(null);
        jtaObservacao.setText(null);
        clsSituacaoCad.setSelectedIndex(0);
        clsVisivelProduto.setSelectedIndex(0);
        rDesCatPai.setText("");
        salvarAlterar = "Salvar";
        ciIdCategoriaCad.setInteger(0);
        paCategoria.setSelectedComponent(ppConsultaCat);
        paCategoria.setEnabledAt(1, false);
        ppCadastroCat.setVisible(false);
    }

    private boolean alterarCategoria() {
        Categoria categoriaAlt = new Categoria();
        resultado = false;
        int linha = tpConsultaCat.getSelectedRow();
        String codigo = "0";
        if (linha < 0) {
            jpsCategoria.setStatus("Selecione uma Categoria na Tabela, antes de clicar em alterar", JPStatus.ALERTA);
            return resultado;
        } else {
            categoriaAlt = otmCatalogo.getValue(tpConsultaCat.getLinhaSelecionada());
            if (categoriaAlt.getIdCategoriaPai() > 0) {
                cccCategoria.setCategoria(new Categoria());
                cccCategoria.getCcpCategoria().setText(Integer.toString(categoriaAlt.getIdCategoriaPai()));
                cccCategoria.getCcpCategoria().setString(Integer.toString(categoriaAlt.getIdCategoriaPai()));
                cccCategoria.getCategoria().setIdCategoriaPai(categoriaAlt.getIdCategoriaPai());
                cccCategoria.getCategoria().setCategoria(categoriaAlt.getCategoriaPai());
                rDesCatPai.setText(categoriaAlt.getCategoriaPai() + "");
            }
            csCategoriaCad.setText(categoriaAlt.getCategoria());
            jtaObservacao.setText(categoriaAlt.getObsCategoria());
            idCategoria = categoriaAlt.getIdCategoria();
            ciIdCategoriaCad.setInteger(idCategoria);
            if (categoriaAlt.getSituacao().equalsIgnoreCase("A")) {
                clsSituacaoCad.setSelectedIndex(0);
            } else {
                clsSituacaoCad.setSelectedIndex(1);
            }
            if (categoriaAlt.getVisivel().equalsIgnoreCase("S")) {
                clsSituacaoCad.setSelectedIndex(0);
            } else {
                clsSituacaoCad.setSelectedIndex(1);
            }
            salvarAlterar = "Alterar";

            resultado = true;
        }
        return resultado;
    }

    private boolean salvarCatalogo() {
        resultado = false;
        String status = clsSituacaoCad.getSelectedItem().toString();
        if (clsSituacaoCad.getSelectedItem().toString().equalsIgnoreCase(" ")) {
            jpsCategoria.setStatus("Erro é necessário informar o Status da Categoria!", JPStatus.ALERTA);
            return resultado;
        }
        if (csCategoriaCad.getString().equalsIgnoreCase("")) {
            jpsCategoria.setStatus("Erro é necessário informar a descrição da Categoria!", JPStatus.ALERTA);
            return resultado;
        }
        try {
            categoria = new Categoria();
            categoriaControl = new CategoriaControl();
            categoria.setIdUsuario(usuario.getIdUsuario());
            categoria.setCategoria(csCategoriaCad.getString());
            categoria.setObsCategoria(jtaObservacao.getText());
            categoria.setIdCategoria(idCategoria);
            if (clsSituacaoCad.getSelectedItem().toString().equalsIgnoreCase("ATIVO")) {
                categoria.setSituacao("A");
            } else {
                categoria.setSituacao("I");
            }
            if (clsVisivelProduto.getSelectedItem().toString().equalsIgnoreCase("SIM")) {
                categoria.setVisivel("S");
            } else {
                categoria.setVisivel("N");
            }
            if (salvarAlterar.equalsIgnoreCase("Alterar")) {
                categoria.setIdCategoria(idCategoria);
                categoria.setIdCategoriaPai(cccCategoria.getCcpCategoria().getInt());
                resultado = categoriaControl.updateCatalogo(categoria);
            } else {
                categoria.setIdCategoriaPai(cccCategoria.getCcpCategoria().getInt());
                categoriaControl.insertCatalogo(categoria);
                jpsCategoria.setStatus("Registro Cadastrado com Sucesso!", JPStatus.NORMAL, 20);
                limparCadastrar();
            }
        } catch (ErroSistemaException ex) {
            jpsCategoria.setStatus(ex.getMessage(), JPStatus.ERRO, ex);
        }
        return resultado;
    }

    private void excluirCategoria() {

        resultado = false;
        categoriaControl = new CategoriaControl();
        categoria = new Categoria();
        int linha = tpConsultaCat.getSelectedRow();
        if (linha < 0) {
            jpsCategoria.setStatus("Selecione uma Categoria na Tabela, antes de clicar em Excluir", JPStatus.ALERTA);
        } else {
            categoria.setIdCategoria(otmCatalogo.getValue(tpConsultaCat.getLinhaSelecionada()).getIdCategoria());
            int excluir = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente Excluir?", "Confirma", JOptionPane.YES_NO_OPTION);
            if (excluir == 0) {
                try {
                    resultado = categoriaControl.excluirCatalogo(categoria);
                } catch (ErroSistemaException ex) {
                    resultado = false;
                    jpsCategoria.setStatus(ex.getMessage(), JPStatus.ERRO, ex);
                }
                if (resultado == true) {
                    buscarCatalogo("Excluir");
                }
            }

        }

    }
}
