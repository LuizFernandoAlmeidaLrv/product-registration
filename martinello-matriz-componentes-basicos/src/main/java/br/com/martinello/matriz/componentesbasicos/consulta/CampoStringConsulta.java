/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.martinello.matriz.componentesbasicos.consulta;

import br.com.martinello.matriz.componentesbasicos.CampoListaSimples;
import br.com.martinello.matriz.componentesbasicos.CampoString;
import br.com.martinello.matriz.componentesbasicos.paineis.Painel;
import br.com.martinello.matriz.util.filtro.Filtro;

/**
 *
 * @author Sidnei
 */
public class CampoStringConsulta extends Painel {

    /**
     * Creates new form CampoStringConsulta
     */
    public CampoStringConsulta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clsTipoFiltro = new br.com.martinello.matriz.componentesbasicos.CampoListaSimples();
        csFiltroString = new br.com.martinello.matriz.componentesbasicos.CampoString();

        setLayout(new java.awt.BorderLayout());

        clsTipoFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Iniciando", "Contendo", "Igual" }));
        clsTipoFiltro.setMaximumSize(new java.awt.Dimension(72, 20));
        add(clsTipoFiltro, java.awt.BorderLayout.LINE_START);
        add(csFiltroString, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private br.com.martinello.matriz.componentesbasicos.CampoListaSimples clsTipoFiltro;
    private br.com.martinello.matriz.componentesbasicos.CampoString csFiltroString;
    // End of variables declaration//GEN-END:variables

    public String getFiltroOld() {
        String filtroDescricao = null;
        if (csFiltroString.getText().trim().length() > 0) {
            switch (clsTipoFiltro.getSelectedItem().toString()) {
                case "Iniciando":
                    filtroDescricao = csFiltroString.getText().trim() + "%";
                    break;
                case "Contendo":
                    filtroDescricao = "%" + csFiltroString.getText().trim() + "%";
                    break;
                default:
                    filtroDescricao = csFiltroString.getText().trim();
                    break;
            }
        }

        return filtroDescricao;
    }

    public void setaTipoFiltro(Object valor) {
        clsTipoFiltro.setSelectedItem(valor);
    }

    public void setaValorFiltro(String valor) {
        csFiltroString.setString(valor);
    }

    public Filtro getFiltro(String campo) {
        if (csFiltroString.getString().trim().length() > 0) {
            return new Filtro(campo, Filtro.STRING, clsTipoFiltro.getString(), (clsTipoFiltro.getString().equals("Contendo") ? "%" : "") + csFiltroString.getString() + (clsTipoFiltro.getString().equals("Iniciando") || clsTipoFiltro.getString().equals("Contendo") ? "%" : ""));
        }
        return new Filtro(campo, Filtro.STRING, clsTipoFiltro.getString(), null);
    }

    public CampoListaSimples getClsTipoFiltro() {
        return clsTipoFiltro;
    }

    public CampoString getCsFiltroString() {
        return csFiltroString;
    }

    public String getString() {
        return csFiltroString.getString();
    }

}
