/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.martinello.matriz.componentesbasicos.consulta;

import br.com.martinello.matriz.componentesbasicos.Campo;
import br.com.martinello.matriz.componentesbasicos.Rotulo;
import br.com.martinello.matriz.componentesbasicos.paineis.Painel;
import br.com.martinello.matriz.util.filtro.Filtro;
import br.com.martinello.matriz.util.filtro.Periodo;
import javax.swing.SwingUtilities;

/**
 *
 * @author Sidnei
 */
public class CampoNumeroConsulta extends Painel implements Campo {

    protected String dica;
    protected String descricaoRotulo;
    protected boolean obrigatorio;
    protected Boolean editavel = true;
    protected Rotulo rRotulo;

    /**
     * Creates new form CampoStringConsulta
     */
    public CampoNumeroConsulta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ciNumeroInicial = new br.com.martinello.matriz.componentesbasicos.CampoInteiro();
        rSeparador = new br.com.martinello.matriz.componentesbasicos.Rotulo();
        ciNumeroFinal = new br.com.martinello.matriz.componentesbasicos.CampoInteiro();

        setLayout(new java.awt.BorderLayout());

        ciNumeroInicial.setText("0");
        ciNumeroInicial.setPreferredSize(new java.awt.Dimension(99, 23));
        add(ciNumeroInicial, java.awt.BorderLayout.WEST);

        rSeparador.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rSeparador.setText("-");
        add(rSeparador, java.awt.BorderLayout.CENTER);

        ciNumeroFinal.setText("0");
        ciNumeroFinal.setPreferredSize(new java.awt.Dimension(99, 23));
        add(ciNumeroFinal, java.awt.BorderLayout.EAST);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private br.com.martinello.matriz.componentesbasicos.CampoInteiro ciNumeroFinal;
    private br.com.martinello.matriz.componentesbasicos.CampoInteiro ciNumeroInicial;
    private br.com.martinello.matriz.componentesbasicos.Rotulo rSeparador;
    // End of variables declaration//GEN-END:variables

    public Long getNumeroInicial() {
        return ciNumeroInicial.getLong();
    }

    public Long getNumeroFinal() {
        return ciNumeroFinal.getLong();
    }

    public Filtro getFiltro(String campo, String formato) {
        if (getNumeroInicial() != null && getNumeroFinal() != null && getNumeroInicial() > 0l && getNumeroFinal() > 0l) {
            return new Filtro(campo, formato, Filtro.PERIODO, new Periodo(getNumeroInicial(), getNumeroFinal()));
        } else if (getNumeroInicial() != null && getNumeroInicial() > 0l) {
            return new Filtro(campo, formato, Filtro.MAIOROUIGUAL, getNumeroInicial());
        } else if (getNumeroFinal() != null && getNumeroFinal() > 0l) {
            return new Filtro(campo, formato, Filtro.MENOROUIGUAL, getNumeroFinal());
        } else {
            return new Filtro(campo, formato, Filtro.PERIODO, null);
        }
    }

    @Override
    public boolean eVazio() {
        if (isObrigatorio()) {
            return ciNumeroInicial.getLong() == 0l || ciNumeroFinal.getLong() == 0l;
        }
        return false;
    }

    @Override
    public void limpar() {
        ciNumeroInicial.limpar();
        ciNumeroInicial.limpar();
    }

    @Override
    public boolean eValido() {
        return ciNumeroInicial.getLong() <= ciNumeroFinal.getLong();
    }

    @Override
    public String getDica() {
        return dica;
    }

    @Override
    public String getDescricaoRotulo() {
        return descricaoRotulo;
    }

    @Override
    public boolean isObrigatorio() {
        return obrigatorio;
    }

    @Override
    public Rotulo getComponenteRotulo() {
        return rRotulo;
    }

    @Override
    public void setObrigatorio(boolean obrigatorio) {
        this.obrigatorio = obrigatorio;

        atualizaDescricaoRotulo();
    }

    @Override
    public void setComponenteRotulo(Rotulo rRotulo) {
        this.rRotulo = rRotulo;

        atualizaDescricaoRotulo();

    }

    public void atualizaDescricaoRotulo() {
        if (rRotulo != null) {
            SwingUtilities.invokeLater(() -> {
                if (obrigatorio) {
                    rRotulo.setText("<html><body>" + descricaoRotulo + "<FONT COLOR='red'><b>*</b></FONT>:</body></html>");
                } else {
                    rRotulo.setText("<html><body>" + descricaoRotulo + ":</body></html>");
                }
            });
        }
    }

    @Override
    public void setDescricaoRotulo(String descricaoRotulo) {
        this.descricaoRotulo = descricaoRotulo;
    }
}
