/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.martinello.gerenciador.view;

import br.com.martinello.componentesbasicos.Campo;
import br.com.martinello.bd.matriz.control.PerfilControl;
import br.com.martinello.bd.matriz.model.domain.Menu;
import br.com.martinello.bd.matriz.model.domain.Perfil;
import br.com.martinello.componentesbasicos.paineis.JPStatus;
import br.com.martinello.util.excessoes.ErroSistemaException;
import br.com.martinello.util.filtro.Filtro;
import com.towel.swing.table.ObjectTableModel;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import javax.swing.event.ListSelectionEvent;

/**
 *
 * @author Sidnei
 */
public class TelaPerfis extends TelaPadrao {

    protected ObjectTableModel<Perfil> otmConsultaPerfil = new ObjectTableModel(Perfil.class, "perfil,descricao");
    protected ObjectTableModel<Menu> otmConsultaPerfilMenus = new ObjectTableModel(Menu.class, "menuPai,menu,descricao");
    protected ObjectTableModel<Menu> otmCadastroPerfilMenus = new ObjectTableModel(Menu.class, "menuPai,menu,descricao");
    protected ObjectTableModel<Menu> otmCadastroMenusDisponiveis = new ObjectTableModel(Menu.class, "menuPai,menu,descricao");

    private PerfilControl perfilControl;

    private List<Campo> lCamposPerfil = new ArrayList<>();

    public TelaPerfis() {
        initComponents();

        try {
            perfilControl = new PerfilControl();
        } catch (ErroSistemaException ex) {
            jpsStatusBar.setStatus("Erro ao carregar classe DAO." + ex.getLocalizedMessage(), JPStatus.ERRO, ex);
        }

        lCamposPerfil.add(csPerfil);
        lCamposPerfil.add(csDescricao);

        otmCadastroPerfilMenus.setEditableDefault(true);
        tpCadastroMenusPerfil.setModel(otmCadastroPerfilMenus);
        jtpPerfil.setEnabledAt(1, false);

        tpConsultaPerfis.getSelectionModel().addListSelectionListener((ListSelectionEvent evt) -> {

            if (tpConsultaPerfis.getSelectedRow() >= 0) {
                Perfil perfilSelecionado = otmConsultaPerfil.getValue(tpConsultaPerfis.convertRowIndexToModel(tpConsultaPerfis.getSelectedRow()));
                perfilControl.setPerfil(perfilSelecionado);

                otmConsultaPerfilMenus.setData(perfilSelecionado.getlPerfilMenus());

                otmConsultaPerfilMenus.fireTableDataChanged();
            }
        });

        otmConsultaPerfil.setData(perfilControl.getlConsultaPerfis());
    }

    public void setDadosPerfil() {
        perfilControl.getPerfil().setPerfil(csPerfil.getString());
        perfilControl.getPerfil().setDescricao(csDescricao.getString());
    }

    public void getDadosPerfil() {
        csPerfil.setString(perfilControl.getPerfil().getPerfil());
        csDescricao.setString(perfilControl.getPerfil().getDescricao());
    }

    @Override
    public void habilitaCadastro(boolean habilitada) {
        jtpPerfil.setEnabledAt(0, !habilitada);
        jtpPerfil.setEnabledAt(1, habilitada);
        jtpPerfil.setSelectedIndex(habilitada ? 1 : 0);
    }

    @Override
    public void habilitaComponentesCadastro(boolean habilita) {
        habilitaPainel(habilita, jpCadastro);
        tpCadastroMenusPerfil.setEnabled(habilita);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtpPerfil = new javax.swing.JTabbedPane();
        jpConsulta = new javax.swing.JPanel();
        jpFiltros = new javax.swing.JPanel();
        jlFiltroPerfil = new br.com.martinello.componentesbasicos.Rotulo();
        jlFiltroDescricao = new br.com.martinello.componentesbasicos.Rotulo();
        jbIncluir = new br.com.martinello.componentesbasicos.Botao();
        jbAlterar = new br.com.martinello.componentesbasicos.Botao();
        jbPesquisar = new br.com.martinello.componentesbasicos.Botao();
        jbExcluir = new br.com.martinello.componentesbasicos.Botao();
        cscFiltroPerfil = new br.com.martinello.componentesbasicos.consulta.CampoStringConsulta();
        cscFiltroDescricao = new br.com.martinello.componentesbasicos.consulta.CampoStringConsulta();
        jSplitPane = new javax.swing.JSplitPane();
        jspConsultaPerfis = new javax.swing.JScrollPane();
        tpConsultaPerfis = new br.com.martinello.componentesbasicos.TabelaPadrao();
        jtpConsulta = new javax.swing.JTabbedPane();
        jspConsultaMenusPerfil = new javax.swing.JScrollPane();
        tpConsultaPerfilMenus = new br.com.martinello.componentesbasicos.TabelaPadrao();
        jpCadastro = new javax.swing.JPanel();
        jpPerfil = new javax.swing.JPanel();
        rPerfil = new br.com.martinello.componentesbasicos.Rotulo();
        rDescricao = new br.com.martinello.componentesbasicos.Rotulo();
        jbSalvar = new br.com.martinello.componentesbasicos.Botao();
        jbCancelar = new br.com.martinello.componentesbasicos.Botao();
        csPerfil = new br.com.martinello.componentesbasicos.CampoString(Perfil.class,"perfil");
        csDescricao = new br.com.martinello.componentesbasicos.CampoString(Perfil.class,"descricao");
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new br.com.martinello.componentesbasicos.Rotulo();
        jLabel2 = new br.com.martinello.componentesbasicos.Rotulo();
        jbRemoverMenu = new br.com.martinello.componentesbasicos.Botao();
        jbAdicionarMenu = new br.com.martinello.componentesbasicos.Botao();
        jspCadastroMenusDisponiveis = new javax.swing.JScrollPane();
        tpCadastroMenusDisponiveis = new br.com.martinello.componentesbasicos.TabelaPadrao();
        jspCadastroMenusPerfil = new javax.swing.JScrollPane();
        tpCadastroMenusPerfil = new br.com.martinello.componentesbasicos.TabelaPadrao();
        jpsStatusBar = new br.com.martinello.componentesbasicos.paineis.JPStatus();

        setClosable(true);
        setIconifiable(true);
        setTitle("Gerenciamento de Perfis");

        jpFiltros.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtros da Pesquisa"));

        jlFiltroPerfil.setText("Perfil:");

        jlFiltroDescricao.setText("Descrição:");

        jbIncluir.setMnemonic('i');
        jbIncluir.setText("Incluir");
        jbIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbIncluirActionPerformed(evt);
            }
        });

        jbAlterar.setMnemonic('a');
        jbAlterar.setText("Alterar");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbPesquisar.setMnemonic('p');
        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        jbExcluir.setMnemonic('e');
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpFiltrosLayout = new javax.swing.GroupLayout(jpFiltros);
        jpFiltros.setLayout(jpFiltrosLayout);
        jpFiltrosLayout.setHorizontalGroup(
            jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFiltrosLayout.createSequentialGroup()
                .addGroup(jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlFiltroDescricao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlFiltroPerfil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cscFiltroPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 857, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cscFiltroDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 857, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jpFiltrosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        jpFiltrosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jlFiltroDescricao, jlFiltroPerfil});

        jpFiltrosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cscFiltroDescricao, cscFiltroPerfil});

        jpFiltrosLayout.setVerticalGroup(
            jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFiltrosLayout.createSequentialGroup()
                .addGroup(jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlFiltroPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cscFiltroPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlFiltroDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cscFiltroDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jpFiltrosLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jlFiltroDescricao, jlFiltroPerfil});

        jpFiltrosLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cscFiltroDescricao, cscFiltroPerfil});

        jSplitPane.setDividerLocation(150);
        jSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jspConsultaPerfis.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jspConsultaPerfis.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jspConsultaPerfis.setPreferredSize(new java.awt.Dimension(319, 200));

        tpConsultaPerfis.setModel(otmConsultaPerfil);
        tpConsultaPerfis.setEditable(false);
        tpConsultaPerfis.setPreferredScrollableViewportSize(new java.awt.Dimension(300, 200));
        tpConsultaPerfis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tpConsultaPerfisMouseClicked(evt);
            }
        });
        jspConsultaPerfis.setViewportView(tpConsultaPerfis);

        jSplitPane.setTopComponent(jspConsultaPerfis);

        tpConsultaPerfilMenus.setModel(otmConsultaPerfilMenus);
        tpConsultaPerfilMenus.setEditable(false);
        jspConsultaMenusPerfil.setViewportView(tpConsultaPerfilMenus);

        jtpConsulta.addTab("Menus", jspConsultaMenusPerfil);

        jSplitPane.setRightComponent(jtpConsulta);

        javax.swing.GroupLayout jpConsultaLayout = new javax.swing.GroupLayout(jpConsulta);
        jpConsulta.setLayout(jpConsultaLayout);
        jpConsultaLayout.setHorizontalGroup(
            jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpFiltros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSplitPane)
        );
        jpConsultaLayout.setVerticalGroup(
            jpConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpConsultaLayout.createSequentialGroup()
                .addComponent(jpFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE))
        );

        jtpPerfil.addTab("Consulta", jpConsulta);

        jbSalvar.setMnemonic('s');
        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbCancelar.setMnemonic('c');
        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        csPerfil.setComponenteRotulo(rPerfil);
        csPerfil.setDescricaoRotulo("Perfil");
        csPerfil.setObrigatorio(true);

        csDescricao.setComponenteRotulo(rDescricao);
        csDescricao.setDescricaoRotulo("Descrição");
        csDescricao.setObrigatorio(true);

        javax.swing.GroupLayout jpPerfilLayout = new javax.swing.GroupLayout(jpPerfil);
        jpPerfil.setLayout(jpPerfilLayout);
        jpPerfilLayout.setHorizontalGroup(
            jpPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPerfilLayout.createSequentialGroup()
                .addGroup(jpPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rPerfil, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                    .addComponent(rDescricao, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPerfilLayout.createSequentialGroup()
                        .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(csPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 756, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpPerfilLayout.setVerticalGroup(
            jpPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPerfilLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Menus"));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Menus Selecionados");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Menus Disponíveis");

        jbRemoverMenu.setText("<");
        jbRemoverMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverMenuActionPerformed(evt);
            }
        });

        jbAdicionarMenu.setText(">");
        jbAdicionarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarMenuActionPerformed(evt);
            }
        });

        tpCadastroMenusDisponiveis.setModel(otmCadastroMenusDisponiveis);
        tpCadastroMenusDisponiveis.setShowGrid(true);
        jspCadastroMenusDisponiveis.setViewportView(tpCadastroMenusDisponiveis);

        tpCadastroMenusPerfil.setModel(otmCadastroPerfilMenus);
        jspCadastroMenusPerfil.setViewportView(tpCadastroMenusPerfil);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jspCadastroMenusDisponiveis, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbAdicionarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbRemoverMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jspCadastroMenusPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jbAdicionarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRemoverMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jspCadastroMenusDisponiveis, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jspCadastroMenusPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpCadastroLayout = new javax.swing.GroupLayout(jpCadastro);
        jpCadastro.setLayout(jpCadastroLayout);
        jpCadastroLayout.setHorizontalGroup(
            jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpPerfil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpCadastroLayout.setVerticalGroup(
            jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroLayout.createSequentialGroup()
                .addComponent(jpPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtpPerfil.addTab("Cadastro/Alteração", jpCadastro);

        getContentPane().add(jtpPerfil, java.awt.BorderLayout.CENTER);
        getContentPane().add(jpsStatusBar, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        try {
            otmConsultaPerfilMenus.clear();

            List<Filtro> lFiltros = new LinkedList<>();
            lFiltros.add(cscFiltroPerfil.getFiltro("perfil"));
            lFiltros.add(cscFiltroDescricao.getFiltro("descricao"));

            perfilControl.pesquisar(lFiltros);

            otmConsultaPerfil.fireTableDataChanged();
            otmConsultaPerfilMenus.fireTableDataChanged();
        } catch (ErroSistemaException ex) {
            jpsStatusBar.setStatus("Erro ao pesquisar perfil.", JPStatus.ERRO, ex);
        }
    }//GEN-LAST:event_jbPesquisarActionPerformed

    private void jbIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbIncluirActionPerformed
        perfilControl.novo();

        limparListaCampos(lCamposPerfil);

        otmCadastroPerfilMenus.setData(perfilControl.getPerfil().getlPerfilMenus());
        otmCadastroMenusDisponiveis.setData(perfilControl.getlMenusDisponiveisAtualizado());
        statusTela = INCLUINDO;
        habilitaComponentesCadastro(true);
        habilitaCadastro(true);

        java.awt.EventQueue.invokeLater(() -> {
            csPerfil.grabFocus();
        });
    }//GEN-LAST:event_jbIncluirActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        try {
            if (statusTela == INCLUINDO || statusTela == ALTERANDO) {
                if (!validarListaCampos(lCamposPerfil)) {
                    jpsStatusBar.setStatus("Campos obrigatórios não preenchidos.", JPStatus.ALERTA);
                    return;
                }

                setDadosPerfil();

                perfilControl.salvarAtualizar();
            } else {
                perfilControl.excluir();
            }

            otmConsultaPerfil.fireTableDataChanged();
            otmConsultaPerfilMenus.fireTableDataChanged();
            
            tpConsultaPerfis.packAll();

            if (statusTela == INCLUINDO || statusTela == ALTERANDO) {
                int posicaoLinha = perfilControl.getlConsultaPerfis().indexOf(perfilControl.getPerfil());
                tpConsultaPerfis.addRowSelectionInterval(tpConsultaPerfis.convertRowIndexToView(posicaoLinha), tpConsultaPerfis.convertRowIndexToView(posicaoLinha));
                tpConsultaPerfis.scrollRectToVisible(tpConsultaPerfis.getCellRect(tpConsultaPerfis.getSelectedRow(), 0, true));
            }

            jpsStatusBar.setStatus("Processamento efetuado com sucesso.", JPStatus.NORMAL);
            habilitaCadastro(false);
            statusTela = INDEFINIDO;

        } catch (ErroSistemaException ex) {
            jpsStatusBar.setStatus("Erro ao realizar processamento.", JPStatus.ERRO, ex);
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        habilitaCadastro(false);
        statusTela = INDEFINIDO;
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        alterarPerfil();
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        if (tpConsultaPerfis.getSelectedRow() >= 0) {
            getDadosPerfil();

            otmCadastroPerfilMenus.setData(perfilControl.getPerfil().getlPerfilMenus());

            habilitaComponentesCadastro(false);

            jbSalvar.setEnabled(true);
            jbCancelar.setEnabled(true);

            habilitaCadastro(true);

            statusTela = EXCLUINDO;
        } else {
            jpsStatusBar.setStatus("É necessário selecionar um perfil.", JPStatus.ALERTA);
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbRemoverMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverMenuActionPerformed
        if (tpCadastroMenusPerfil.getSelectedRow() >= 0) {
            perfilControl.removerMenus(otmCadastroPerfilMenus.getList(tpCadastroMenusPerfil.getLinhasSelecionadas()));

            otmCadastroPerfilMenus.fireTableDataChanged();
            otmCadastroMenusDisponiveis.fireTableDataChanged();
        }
    }//GEN-LAST:event_jbRemoverMenuActionPerformed

    private void jbAdicionarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarMenuActionPerformed
        if (tpCadastroMenusDisponiveis.getSelectedRow() >= 0) {
            perfilControl.adicionarMenus(otmCadastroMenusDisponiveis.getList(tpCadastroMenusDisponiveis.getLinhasSelecionadas()));

            otmCadastroPerfilMenus.fireTableDataChanged();
            otmCadastroMenusDisponiveis.fireTableDataChanged();
        }
    }//GEN-LAST:event_jbAdicionarMenuActionPerformed

    private void tpConsultaPerfisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tpConsultaPerfisMouseClicked
        if (evt.getClickCount() == 2) {
            alterarPerfil();
        }
    }//GEN-LAST:event_tpConsultaPerfisMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private br.com.martinello.componentesbasicos.CampoString csDescricao;
    private br.com.martinello.componentesbasicos.CampoString csPerfil;
    private br.com.martinello.componentesbasicos.consulta.CampoStringConsulta cscFiltroDescricao;
    private br.com.martinello.componentesbasicos.consulta.CampoStringConsulta cscFiltroPerfil;
    private br.com.martinello.componentesbasicos.Rotulo jLabel1;
    private br.com.martinello.componentesbasicos.Rotulo jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane;
    private br.com.martinello.componentesbasicos.Botao jbAdicionarMenu;
    private br.com.martinello.componentesbasicos.Botao jbAlterar;
    private br.com.martinello.componentesbasicos.Botao jbCancelar;
    private br.com.martinello.componentesbasicos.Botao jbExcluir;
    private br.com.martinello.componentesbasicos.Botao jbIncluir;
    private br.com.martinello.componentesbasicos.Botao jbPesquisar;
    private br.com.martinello.componentesbasicos.Botao jbRemoverMenu;
    private br.com.martinello.componentesbasicos.Botao jbSalvar;
    private br.com.martinello.componentesbasicos.Rotulo jlFiltroDescricao;
    private br.com.martinello.componentesbasicos.Rotulo jlFiltroPerfil;
    private javax.swing.JPanel jpCadastro;
    private javax.swing.JPanel jpConsulta;
    private javax.swing.JPanel jpFiltros;
    private javax.swing.JPanel jpPerfil;
    private br.com.martinello.componentesbasicos.paineis.JPStatus jpsStatusBar;
    private javax.swing.JScrollPane jspCadastroMenusDisponiveis;
    private javax.swing.JScrollPane jspCadastroMenusPerfil;
    private javax.swing.JScrollPane jspConsultaMenusPerfil;
    private javax.swing.JScrollPane jspConsultaPerfis;
    private javax.swing.JTabbedPane jtpConsulta;
    private javax.swing.JTabbedPane jtpPerfil;
    private br.com.martinello.componentesbasicos.Rotulo rDescricao;
    private br.com.martinello.componentesbasicos.Rotulo rPerfil;
    private br.com.martinello.componentesbasicos.TabelaPadrao tpCadastroMenusDisponiveis;
    private br.com.martinello.componentesbasicos.TabelaPadrao tpCadastroMenusPerfil;
    private br.com.martinello.componentesbasicos.TabelaPadrao tpConsultaPerfilMenus;
    private br.com.martinello.componentesbasicos.TabelaPadrao tpConsultaPerfis;
    // End of variables declaration//GEN-END:variables

    private void alterarPerfil() {
        if (tpConsultaPerfis.getSelectedRow() >= 0) {
            getDadosPerfil();

            habilitaCadastro(true);
            otmCadastroPerfilMenus.setData(perfilControl.getPerfil().getlPerfilMenus());
            otmCadastroMenusDisponiveis.setData(perfilControl.getlMenusDisponiveisAtualizado());
            otmCadastroMenusDisponiveis.fireTableDataChanged();

            habilitaComponentesCadastro(true);
            habilitaCadastro(true);
            statusTela = ALTERANDO;
        } else {
            jpsStatusBar.setStatus("É necessário selecionar um perfil.", JPStatus.ALERTA);
        }
    }

}
